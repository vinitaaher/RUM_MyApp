import type { Context } from '../../tools/serialisation/context';
import type { Configuration } from '../configuration';
import { Observable } from '../../tools/observable';
import type { StackTrace } from '../error/computeStackTrace';
import type { TelemetryEvent } from './telemetryEvent.types';
import type { RawTelemetryConfiguration } from './rawTelemetryEvent.types';
export declare const enum TelemetryService {
    LOGS = "browser-logs-sdk",
    RUM = "browser-rum-sdk"
}
export interface Telemetry {
    setContextProvider: (provider: () => Context) => void;
    observable: Observable<TelemetryEvent & Context>;
    enabled: boolean;
}
export declare function startTelemetry(telemetryService: TelemetryService, configuration: Configuration): Telemetry;
export declare function startFakeTelemetry(): ({
    [k: string]: unknown;
    type?: "log" | undefined;
    status: "error";
    message: string;
    error?: {
        [k: string]: unknown;
        stack?: string | undefined;
        kind?: string | undefined;
    } | undefined;
} | {
    [k: string]: unknown;
    type?: "log" | undefined;
    status: "debug";
    message: string;
} | {
    [k: string]: unknown;
    type: "configuration";
    configuration: {
        [k: string]: unknown;
        session_sample_rate?: number | undefined;
        telemetry_sample_rate?: number | undefined;
        telemetry_configuration_sample_rate?: number | undefined;
        trace_sample_rate?: number | undefined;
        premium_sample_rate?: number | undefined;
        replay_sample_rate?: number | undefined;
        session_replay_sample_rate?: number | undefined;
        start_session_replay_recording_manually?: boolean | undefined;
        use_proxy?: boolean | undefined;
        use_before_send?: boolean | undefined;
        silent_multiple_init?: boolean | undefined;
        track_session_across_subdomains?: boolean | undefined;
        track_resources?: boolean | undefined;
        track_long_task?: boolean | undefined;
        use_cross_site_session_cookie?: boolean | undefined;
        use_partitioned_cross_site_session_cookie?: boolean | undefined;
        use_secure_session_cookie?: boolean | undefined;
        allow_fallback_to_local_storage?: boolean | undefined;
        store_contexts_across_pages?: boolean | undefined;
        allow_untrusted_events?: boolean | undefined;
        action_name_attribute?: string | undefined;
        use_allowed_tracing_origins?: boolean | undefined;
        use_allowed_tracing_urls?: boolean | undefined;
        selected_tracing_propagators?: ("datadog" | "b3" | "b3multi" | "tracecontext")[] | undefined;
        default_privacy_level?: string | undefined;
        use_excluded_activity_urls?: boolean | undefined;
        use_worker_url?: boolean | undefined;
        track_frustrations?: boolean | undefined;
        track_views_manually?: boolean | undefined;
        track_interactions?: boolean | undefined;
        track_user_interactions?: boolean | undefined;
        forward_errors_to_logs?: boolean | undefined;
        forward_console_logs?: string[] | "all" | undefined;
        forward_reports?: string[] | "all" | undefined;
        use_local_encryption?: boolean | undefined;
        view_tracking_strategy?: "ActivityViewTrackingStrategy" | "FragmentViewTrackingStrategy" | "MixedViewTrackingStrategy" | "NavigationViewTrackingStrategy" | undefined;
        track_background_events?: boolean | undefined;
        mobile_vitals_update_period?: number | undefined;
        track_errors?: boolean | undefined;
        track_network_requests?: boolean | undefined;
        use_tracing?: boolean | undefined;
        track_native_views?: boolean | undefined;
        track_native_errors?: boolean | undefined;
        track_native_long_tasks?: boolean | undefined;
        track_cross_platform_long_tasks?: boolean | undefined;
        use_first_party_hosts?: boolean | undefined;
        initialization_type?: string | undefined;
        track_flutter_performance?: boolean | undefined;
        batch_size?: number | undefined;
        batch_upload_frequency?: number | undefined;
        batch_processing_level?: number | undefined;
        background_tasks_enabled?: boolean | undefined;
        react_version?: string | undefined;
        react_native_version?: string | undefined;
        dart_version?: string | undefined;
    };
})[];
export declare function resetTelemetry(): void;
/**
 * Avoid mixing telemetry events from different data centers
 * but keep replicating staging events for reliability
 */
export declare function isTelemetryReplicationAllowed(configuration: Configuration): boolean;
export declare function addTelemetryDebug(message: string, context?: Context): void;
export declare function addTelemetryError(e: unknown, context?: Context): void;
export declare function addTelemetryConfiguration(configuration: RawTelemetryConfiguration): void;
export declare function formatError(e: unknown): {
    error: {
        kind: string | undefined;
        stack: string;
    };
    message: string;
} | {
    error: {
        stack: string;
        kind?: undefined;
    };
    message: string;
};
export declare function scrubCustomerFrames(stackTrace: StackTrace): StackTrace;
